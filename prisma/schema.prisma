// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Credential {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  token     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  User User?
}

model User {
  id              Int       @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String    @unique
  phone           Int
  countryCode     Int
  adress          Int
  deletedAt       DateTime?
  licenseId       Int
  avatar          String?
  emailVerified   Boolean   @default(false)
  phoneVerified   Boolean   @default(false)
  profileVerified Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  credentialId    Int       @unique

  Credential Credential @relation(fields: [credentialId], references: [id])

  @@unique([phone, countryCode], name: "User_phone_countryCode_unique")
}

model Adress {
  id         Int       @id @default(autoincrement())
  street     String
  number     String
  city       String
  postalCode String
  country    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}

model Document {
  id          Int       @id @default(autoincrement())
  type        String
  validUntil  DateTime
  deliveredAt DateTime
  number      String
  file        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@unique([type, number], name: "Document_type_number_unique")
}

model Admin {
  id        String    @id
  password  String
  token     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum GearType {
  MANUAL
  AUTOMATIC
}

enum FuelType {
  GASOLINE
  DIESEL
  ELECTRIC
  HYBRID
}

enum BreakType {
  DISC
  DRUM
  HYDRAULIC
  ANTILOCK
  MECHANICAL
  REGENERATIVE
}

enum CarType {
  SEDAN
  HATCHBACK
  SUV
  COUPE
  CONVERTIBLE
  WAGON
  VAN
  MINIVAN
  JEEP
  OTHER
}

model Car {
  id                 Int       @id @default(autoincrement())
  brand              String
  model              String
  year               Int
  color              String
  carType            CarType
  fuelType           FuelType
  fuelCapacity       Float
  fuelEfficiency     Int
  gearType           GearType
  breakType          BreakType
  remark             String?   @default("")
  rentPrice          Float
  location           String
  latitude           Float
  longitude          Float
  seats              Int
  doors              Int
  airCondition       Boolean
  bluetooth          Boolean
  usb                Boolean
  gps                Boolean
  radio              Boolean
  aux                Boolean
  childSeat          Boolean
  registrationNumber String
  image              String
  images             String[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  deletedAt          DateTime?

  @@unique([registrationNumber], name: "Car_registrationNumber_unique")
}
